{"version":3,"file":"index.js","mappings":"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","sources":["webpack://any-cpt-listing-gutenberg-block/external window [\"wp\",\"components\"]","webpack://any-cpt-listing-gutenberg-block/external window [\"wp\",\"element\"]","webpack://any-cpt-listing-gutenberg-block/webpack/bootstrap","webpack://any-cpt-listing-gutenberg-block/webpack/runtime/compat get default export","webpack://any-cpt-listing-gutenberg-block/webpack/runtime/define property getters","webpack://any-cpt-listing-gutenberg-block/webpack/runtime/hasOwnProperty shorthand","webpack://any-cpt-listing-gutenberg-block/webpack/runtime/make namespace object","webpack://any-cpt-listing-gutenberg-block/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const { registerBlockType } = wp.blocks;\r\nconst { InspectorControls  } = wp.editor;\r\nimport { __experimentalNumberControl as NumberControl } from '@wordpress/components';\r\nconst { \r\n\t\tPanelBody, \r\n\t\tPanelRow, \r\n\t\tSelectControl,  \r\n\t} = wp.components;\r\n\r\n\r\nregisterBlockType('acptlgb/any-cpt-listing', {\r\n\ttitle: 'Any CPT Listing',\r\n\ticon: 'smiley',\r\n\tcategory: 'common',\r\n\tattributes:{\r\n\t\tpost_types: { type: 'object' },\r\n\t\tselected_post_type: {type: \"string\"},\r\n\t\tposts_per_page: {type: \"string\", default: 6},\r\n\t},\r\n\t\r\n\tedit: function({ attributes, setAttributes }) {\r\n\r\n\t\t\r\n\t\tif(!attributes.post_types){\r\n\t\t\twp.apiFetch({ \r\n\t\t\t\tpath:'/wp/v2/all_post_types',\r\n\t\t\t}).then( ( post_types ) => {\r\n\t\t\t\tsetAttributes({ post_types });\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(!attributes.post_types){\r\n\t\t\treturn 'Loading..';\r\n\t\t}\r\n\t\tif(attributes.post_types && attributes.post_types.lenght === 0){\r\n\t\t\treturn 'No post_types regsited!';\r\n\t\t}\r\n\r\n\t\treturn(<>\r\n\t\t\t<InspectorControls key=\"setting\">\r\n\t\t\t\t<PanelBody title={'Display Settings'}>\r\n\t\t\t\t\t<PanelRow>\r\n\t\t\t\t\t\t<SelectControl \r\n\t\t\t\t\t\t\tlabel=\"Select Post Type\" \r\n\t\t\t\t\t\t\tvalue={attributes.selected_post_type} \r\n\t\t\t\t\t\t\tonChange={ (new_selected_post_type) => setAttributes({selected_post_type: new_selected_post_type}) } >\r\n\t\t\t\t\t\t\t\t{attributes.post_types.map(  post => { return( <option> {post.title} </option> ) })}\r\n\t\t\t\t\t\t</SelectControl>\r\n\t\t\t\t\t</PanelRow>\r\n\t\t\t\t\t<PanelRow>\r\n\t\t\t\t\t\t<NumberControl \r\n\t\t\t\t\t\t\tlabel=\"Number of posts\" \r\n\t\t\t\t\t\t\tvalue={attributes.posts_per_page} \r\n\t\t\t\t\t\t\tonChange={ (new_posts_per_page) => setAttributes({posts_per_page: new_posts_per_page}) }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</PanelRow>\r\n\t\t\t\t</PanelBody>\r\n\t\t\t</InspectorControls>\t\t\t\r\n\t\t\t<h1>Hello Editor</h1>\r\n\t\t</>);\r\n\t},\r\n\r\n\tsave: function() {\r\n\t\treturn null;\r\n\t},\r\n});"],"names":["registerBlockType","wp","blocks","InspectorControls","editor","__experimentalNumberControl","NumberControl","PanelBody","PanelRow","SelectControl","components","title","icon","category","attributes","post_types","type","selected_post_type","posts_per_page","default","edit","setAttributes","apiFetch","path","then","lenght","new_selected_post_type","map","post","new_posts_per_page","save"],"sourceRoot":""}